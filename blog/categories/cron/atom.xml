<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: cron | Chennai Nerd]]></title>
  <link href="http://www.chennainerd.in/blog/categories/cron/atom.xml" rel="self"/>
  <link href="http://www.chennainerd.in/"/>
  <updated>2015-04-09T20:05:41+05:30</updated>
  <id>http://www.chennainerd.in/</id>
  <author>
    <name><![CDATA[Chennai Nerd]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Running Python script from Cron job in Openshift]]></title>
    <link href="http://www.chennainerd.in/blog/2014/05/29/running-python-script-from-cron-job-in-openshift/"/>
    <updated>2014-05-29T11:47:37+05:30</updated>
    <id>http://www.chennainerd.in/blog/2014/05/29/running-python-script-from-cron-job-in-openshift</id>
    <content type="html"><![CDATA[<p><code>Openshift</code> is one of the amazing PAAS service where you can deploy
your application in a very simple steps. It also provides Free gear for developer.
So you can deploy your hack without providing credit card information for zero dollar.</p>

<p>Our application stack is Python Flask, MongoDB, Angular.js and some CRON scripts.
We wanted to deploy our application in some PAAS which has CRON support.</p>

<p>First We choose <code>Google App Engine</code> since it supports CRON jobs.
Unfortunately Google App Engine does not allow us to connect external MongoDB
database like MongoHQ and MongoLab. Only solution is to create MongoDB instance
in <code>Google Compute Engine</code>. It is not feasible for us.</p>

<p>We also play with <code>Heroku</code> which does not work well for us.
Finally we move to <code>Openshift</code> to deploy our application. Following are the
steps to configure cron scripts in <code>Openshift</code>.</p>

<ul>
<li>Add CRON cartridge in your application</li>
</ul>


<p><code>
rhc cartridge add cron-1.4 -a application_name
</code></p>

<p><code>rhc</code> is a command line tool to control the <code>Openshift</code> application.</p>

<ul>
<li>Place your cron scripts to your application&rsquo;s <code>.openshift/cron/{minutely,hourly,daily,weekly,monthly}/</code> folder. Here is the sample python scripts.</li>
</ul>


<p>```</p>

<h1>!/bin/bash</h1>

<p>echo &ldquo;<strong><strong><strong><strong><strong><strong> Cronny Started </strong></strong></strong></strong></strong></strong>***&rdquo;
date >> ${OPENSHIFT_DATA_DIR}/ticktock-start.log</p>

<p>source ${OPENSHIFT_HOMEDIR}/python/virtenv/bin/activate
python ${OPENSHIFT_REPO_DIR}/wsgi/crawler.py</p>

<p>echo &ldquo;<strong><strong><strong><strong><strong><strong> Cronny Executed </strong></strong></strong></strong></strong></strong>***&rdquo;
date >> ${OPENSHIFT_DATA_DIR}/ticktock-end.log
```</p>

<p>And that&rsquo;s all there is to it! Have a nice day.</p>
]]></content>
  </entry>
  
</feed>
